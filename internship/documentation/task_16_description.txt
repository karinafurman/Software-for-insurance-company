В ходе выполнения данного задания в классе TravelCalculatePremiumResponse была создана переменная agreementPrice
типа BigDecimal, методы геттер и сеттер для неё; также переменная включена в конструктор в качестве параметра.
В Java для представления денежных значений рекомендуется использовать класс BigDecimal, а не типы float или double,
по следующим причинам:
1. Точность и округление
•	Типы float и double основаны на стандарте IEEE 754 для чисел с плавающей запятой. Они хранят числа в двоичном
 формате, что может приводить к ошибкам округления при выполнении арифметических операций.
2. Контроль над масштабированием
•	BigDecimal предоставляет методы для точного управления масштабированием (количеством знаков после запятой) и
округлением. Это позволяет избежать накопления ошибок при многократных вычислениях.
3. Иммутабельность
•	BigDecimal является иммутабельным (неизменяемым) классом. Это означает, что каждое арифметическое действие
возвращает новый объект, что делает его безопасным для использования в многопоточных средах и предотвращает случайное
изменение значений.
4. Поддержка больших чисел
•	BigDecimal может работать с очень большими числами, что важно для финансовых расчетов, где суммы могут быть
огромными.
5. Сравнение значений
•	При сравнении чисел с плавающей запятой (float или double) из-за ошибок округления может возникнуть ситуация,
когда два числа, которые должны быть равны, на самом деле не равны. BigDecimal позволяет избежать этой проблемы,
так как сравнение происходит точно.



